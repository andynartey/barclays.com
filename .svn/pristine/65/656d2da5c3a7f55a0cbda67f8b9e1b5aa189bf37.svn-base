$(function(){

    $(document)
        .foundation('dropdown')
        .foundation('section')
        .foundation('forms');



    // Remove inline styling
    $.fn.removeStyle = function(style) {
        var search = new RegExp(style + '[^;]+;?', 'g');

        return this.each(function() {
            $(this).attr('style', function(i, style) {
                return style.replace(search, '');
            });
        });
    };

    // Create jRespond Breakpoints
    var jRes = jRespond([
        {
            label: 'mobile',
            enter: 0,
            exit: 479
        },{
            label: 'tablet',
            enter: 480,
            exit: 768
        },{
            label: 'desktop',
            enter: 769,
            exit: 10000
        }
    ]);


    // ====================================================
    // MEGA MENU
    // ====================================================
    var $megaLink = $('[data-mega-top-link]'),
        $menuLinks = $('[data-mega-links]'),
        $menuPromo = $('[data-mega-promo]'),
        $megaCloseBtn = $('[data-mega-close]'),
        $megaMenuList = $('[data-mega-menu-list]');

    var megaMenu = {

        init: function() {
            $megaLink.on('click', this.checkState);

            $menuLinks.hoverIntent({
                over: this.hoverOpenThirdLevel,
                out: this.hoverCloseThirdLevel,
                selector: '[data-mega-links-item]',
                timeout: 150
            });

            $megaCloseBtn.on('click', this.checkState);
        },

        checkState: function(e) {
            var $selector = $(this),
                openItems = $('.mega-active');

            if ( $(this).hasClass('mega-active') ) {
                megaMenu.closeMega(openItems);
            } else {
                megaMenu.closeMega(openItems);
                megaMenu.openMega($selector);
            }

            e.preventDefault();
        },

        openMega: function($selector) {
            var windowWidth = $(window).width(),
                siteWidth = $('.top-nav-bar > .row').width(),
                leftPos = (windowWidth - siteWidth) / 2;

            $selector.parent().addClass('active');

            $selector.next('[data-mega-content]').show()
                .addClass('js-mega-menu-open')
                .css('width', windowWidth)
                .css('left', -leftPos);

            $selector.addClass('mega-active');

            $selector.next('[data-mega-content]')
                .find('[data-mega-promo]')
                    .flexslider({
                        animation: "slide"
                    });

            megaMenu.addHoverTopLevel();
            megaMenu.outsideClickClose($selector);
        },

        closeMega: function($selector) {
            $selector.parent().removeClass('active');
            $selector.next('[data-mega-content]').hide().removeClass('js-mega-menu-open');
            $selector.removeClass('mega-active');
            $(document).off('mouseup');
            $megaMenuList.unbind('mouseenter').unbind('mouseleave');
            $megaMenuList.removeProp('hoverIntent_t');
            $megaMenuList.removeProp('hoverIntent_s');
        },

        outsideClickClose: function($selector) {

            $(document).on('mouseup', function(e) {
                var navContainer = $('.main-nav');

                if ( !navContainer.is(e.target) && navContainer.has(e.target).length === 0 ) {
                    megaMenu.closeMega($selector);
                }
            });
        },

        addHoverTopLevel: function() {

            $megaMenuList.hoverIntent({
                over: this.checkState,
                selector: '[data-mega-top-link]',
                timeout: 0
            });
        },

        hoverOpenThirdLevel: function() {
            var menuLinksWidth = $menuLinks.width(),
                menuLinksHeight = $menuLinks.height(),
                $selector = $(this);

            $selector.find('[data-mega-third-level-list]').show()
                .css('width', menuLinksWidth)
                .css('height', menuLinksHeight-28);
            $menuPromo.hide();
        },

        hoverCloseThirdLevel: function() {
            var $selector = $(this);

            $selector.find('[data-mega-third-level-list]').hide();
            $menuPromo.show();
        }
    };


    // ====================================================
    // MOBILE HAMBURGER MENU
    // ====================================================
    var $siteContainer = $('.site-container'),
        $offcanvasMenuHolder = $('[data-offcanvas-menu-left]'),
        $offCanvasContentLayer = $('[data-offcanvas-menu-content-layer]'),
        $offCanvasMenuTopLevel = $('[data-offcanvas-menu-top-level]');

    var offCanvasMenu = {
        init: function() {
            $('[data-offcanvas-menu-toggle]').on('click', function(e) {

                if ( $siteContainer.hasClass('offcanvas-menu-open') ) {
                    offCanvasMenu.closeMenu();
                } else {
                    offCanvasMenu.openMenu();
                }

                e.preventDefault();
            });
        },

        openMenu: function() {
            var contentWidth = $siteContainer.width(),
                offCanvasMenuWidth = $offcanvasMenuHolder.width(),
                windowHeight = $('body').height();

            $offcanvasMenuHolder.css('height', windowHeight);

            $siteContainer.css('width', contentWidth);

            $offCanvasContentLayer.show();
            offCanvasMenu.closeLayer();

            $siteContainer.on('touchmove', function(e) {
                e.preventDefault();
            });  // disable scrolling on mobile devices

            $siteContainer.transition({
                "margin-left": offCanvasMenuWidth }, 250 )
                .addClass('offcanvas-menu-open');

            if ( $logoBanner.hasClass('banner-sticky') ) {
                $logoBanner.transition({
                    "left": offCanvasMenuWidth
                }, 250 );
            }
        },

        closeMenu: function() {
            $siteContainer.off('touchmove');
            $offcanvasMenuHolder.css('height', 'auto');

            $siteContainer.transition({ "margin-left": 0 }, 250);

            $siteContainer.css('width', 'auto').removeClass('offcanvas-menu-open');
            $siteContainer.removeStyle('width').removeStyle('margin-left');

            $offCanvasContentLayer.off('click');
            $offCanvasContentLayer.hide();

            if ( $logoBanner.hasClass('banner-sticky') ) {
                $logoBanner.transition({ "left": 0 }, 250 );
            }
        },

        closeLayer: function() {
            $offCanvasContentLayer.on('click', offCanvasMenu.closeMenu);
        }
    };

    var offCanvasMenuNestedLevels = {

        init: function() {
            $('[data-offcanvas-menu-second-link]').on('click', this.showSecondLevel);
            $('[data-offcanvas-menu-third-link]').on('click', this.showThirdLevel);
            $('[data-offcanvas-menu-second-back]').on('click', this.hideSecondLevel);
            $('[data-offcanvas-menu-third-back]').on('click', this.hideThirdLevel);
        },

        showSecondLevel: function(e) {
            var offCanvasMenuWidth = $offcanvasMenuHolder.width();

            $(this).next('[data-offcanvas-menu-second-level]').addClass('off-canvas-menu-active');

            $offCanvasMenuTopLevel
                .transition({
                    left: -offCanvasMenuWidth
                }, 250);

            e.preventDefault();
        },

        hideSecondLevel: function(e) {

            $(this).parent('[data-offcanvas-menu-second-level]').removeClass('off-canvas-menu-active');

            $offCanvasMenuTopLevel
                .transition({
                    left: 0
                }, 250);

            e.preventDefault();
        },

        showThirdLevel: function(e) {
            var offCanvasMenuWidth = $offcanvasMenuHolder.width();

            $(this).next('[data-offcanvas-menu-third-level]').addClass('off-canvas-menu-active');

            $('[data-offcanvas-menu-second-level]')
                .removeClass('off-canvas-menu-active')
                .transition({
                    left: -offCanvasMenuWidth
                }, 250);

            e.preventDefault();
        },

        hideThirdLevel: function(e) {
            $(this).parent('[data-offcanvas-menu-third-level]').removeClass('off-canvas-menu-active');

            $(this).closest('[data-offcanvas-menu-second-level]')
                .addClass('off-canvas-menu-active')
                .transition({
                    left: '100%'
                }, 250);

            e.preventDefault();
        }
    };



    // ====================================================
    // HEADER SEARCH FIELD
    // ====================================================
    var $searchContainer = $('[data-search]'),
        $searchBtn = $('[data-search-toggle]'),
        $searchForm = $('[data-search-form]'),
        $searchField = $('[data-search-field]');

    var headerSearchField = {

        init: function() {
            this.checkOnLoad();
            $searchBtn.on('click', this.showField);
        },

        checkOnLoad: function() {

            if ( Modernizr.mq('only screen and (min-width: 769px)') ) {
                $searchContainer.addClass('search-desktop');
            } else {
                $searchContainer.addClass('search-mobile');
            }

            this.mediaDetection();
        },

        mediaDetection: function() {
            jRes.addFunc({
                breakpoint: 'desktop',

                enter: function() {
                    $searchContainer.addClass('search-desktop').removeClass('search-mobile');

                    if ( $searchForm.attr('style') ) {
                        $searchForm.removeStyle('width');
                    }
                },

                exit: function() {
                    $searchContainer.addClass('search-mobile').removeClass('search-desktop');
                }
            });
        },

        showField: function(e) {
            $searchBtn.hide();
            $searchForm.show();

            if ( $searchContainer.hasClass('search-mobile') ) {
                var rowWidth = $('.bottom-footer__links').width();
                $searchForm.css('width', rowWidth);
            }
            $searchField.focus().on('blur', headerSearchField.hideField);

            e.preventDefault();
        },

        hideField: function() {
            $searchForm.hide();
            $searchBtn.show();
            $searchField.off('blur');
        }

    };

    // ====================================================
    // STORYTELLER VIEW TOGGLE
    // ====================================================
    var $viewToggle = $('[data-storyteller-viewtoggle]'),
        $storyTellerBody = $('[data-storyteller-body]'),
        $storyItem = $('[data-storyteller-item]'),
        $showMoreBtn = $('[data-storyteller-showmore]');

    var storyteller = {

        init: function() {
            $viewToggle.on('click', this.checkView);
        },

        checkView: function(e) {
            if ( $storyTellerBody.hasClass('storyteller-list-view') ) {
                $(this).removeClass('grid-view');
                $storyTellerBody.removeClass('storyteller-list-view');
            } else {
                $(this).addClass('grid-view');
                $storyTellerBody.addClass('storyteller-list-view');
            }
            e.preventDefault();
        }
    };

    // ====================================================
    // STORYTELLER LAZY LOAD
    // ====================================================

    var storyTellerItemStoryRule = 9;

    var storyTellerLazyLoad = {

        init: function() {
            this.hideContent();
            $showMoreBtn.on('click', this.showMore);
        },

        hideContent: function() {
            $storyItem.hide().addClass('js-itemHidden');

            for ( var i = 0; i < storyTellerItemStoryRule; i++ ) {
                $storyItem.eq(i).show().removeClass('js-itemHidden');
            }
        },

        showMore: function(e) {
            var $hiddenItems = $('.js-itemHidden');

            for ( var i = 0; i < storyTellerItemStoryRule; i++ ) {
                $hiddenItems.eq(i).fadeIn().removeClass('js-itemHidden');
            }

            var firstItemPos = $hiddenItems.first().offset().top;

            storyTellerLazyLoad.scrollTo(firstItemPos);

            storyTellerLazyLoad.hideBtn();

            e.preventDefault();
        },

        scrollTo: function(firstItemPos) {
            var scrollTarget = firstItemPos;

            $('html, body').animate({
                scrollTop: scrollTarget-10
            }, 'slow');
        },

        hideBtn: function() {
            var hiddenItemCount = $('.js-itemHidden').length;

            if ( hiddenItemCount === 0 ) {
                $('.storyteller__more-stories').hide();
                $('[data-storyteller-archive]').show();
            }
        }

    };

    // ====================================================
    // STORYTELLER FILTERS
    // ====================================================

    var $storyTellerFilterLink = $('[data-storyteller-filter-link]'),
        $storyTellerFilterToggle = $('[data-storyteller-filter-toggle]'),
        $storyTellerFilterHolder = $('[data-storyteller-filter-holder]');

    var storyTellerFilter = {

        init: function() {
            this.checkOnLoad();
            $storyTellerFilterLink.on('click', this.checkState);
            $storyTellerFilterToggle.on('click', this.mobileToggleFilters);
        },

        checkState: function(e) {
            var $self = $(this);

            if ( $self.hasClass('active') ) {
                storyTellerFilter.hideDropdown($self);
            } else {
                storyTellerFilter.showDropdown($self);
            }

            e.preventDefault();
        },

        showDropdown: function($self) {
            var getLinkWidth = $self.outerWidth(),
                getLinkPos = $self.position(),
                getLinkHeight = $self.height();

            $('[data-storyteller-filter-list]').hide();
            $storyTellerFilterLink.removeClass('active');

            $self.addClass('active');
            $self.next('[data-storyteller-filter-list]')
                .css({
                    'width': getLinkWidth,
                    'top': getLinkPos.top + getLinkHeight + 20
                }).show();

            $self.next('[data-storyteller-filter-list]')
                .find('[data-storyteller-filter-item]')
                    .on('click', storyTellerFilter.addSelectedItem);
        },

        hideDropdown: function($self) {
            $self.removeClass('active');
            $self.next('[data-storyteller-filter-list]').hide()
                .find('[data-storyteller-filter-item]')
                    .off('click', storyTellerFilter.addSelectedItem);
        },

        addSelectedItem: function(e) {

            var txt = $(this).find('a').text(),
                labelHolder = '<div class="storyteller-filter-label"><a href="">' + txt + '</a></div>';

            var $self = $('[data-storyteller-filter-link]').filter('.active');

            var getLinkWidth = $self.outerWidth(),
                getLinkPos = $self.position();

            storyTellerFilter.hideDropdown($self);

            $self.after(labelHolder);

            $('.storyteller-filter-label').css({
                'width': getLinkWidth,
                'top': getLinkPos.top
            });

            $('.storyteller-filter-label').on('click', storyTellerFilter.removeSelectedItem);

            e.preventDefault();
        },

        removeSelectedItem: function(e) {

            $(this)
                .hide()
                .off('click')
                .remove();

            e.preventDefault();
        },

        checkOnLoad: function() {

            if ( Modernizr.mq('only screen and (min-width: 769px)') ) {
                $storyTellerFilterHolder.show();
            } else {
                $storyTellerFilterHolder.hide();
            }

            this.mediaDetection();
        },

        mediaDetection: function() {
            jRes.addFunc({
                breakpoint: 'desktop',

                enter: function() {
                    $storyTellerFilterHolder.show();
                },

                exit: function() {
                    $storyTellerFilterHolder.hide();
                }
            });
        },

        mobileToggleFilters: function(e) {

            $(this).toggleClass('filter-active');

            $storyTellerFilterHolder.slideToggle('fast');

            e.preventDefault();
        }
    };


    // ====================================================
    // EQUAL HEIGHTS
    // ====================================================
    var equalHeights = {
        applyHeights: function (elems) {
            var height = -1;
            $(elems).each(function() {
                    if ($(this).outerHeight() > height) {
                            height = $(this).outerHeight();
                    }
            });
            $(elems).each(function() {
                    $(this).css('min-height', height);
            });
        },
        getColumns: function($targets) {
            var offset = -1,
                columns,
                currentOffset;

            for (columns = 0; columns < $targets.length; columns += 1) {
                    currentOffset = $($targets[columns]).offset().top;

                    if(currentOffset > offset && offset !== -1) {
                            return columns;
                    }

                    offset = currentOffset;
            }
            return columns;
        },
        set: function ($elems) {
            var eq = this;
            $elems.each(function (index, elem) {
                var $elem = $(elem),
                    targetDiv = '.' + $elem.data('equalHeightsTarget'),
                    $targets,
                    setHeights;

                $targets = $(targetDiv, $elem);

                setHeights = function () {
                    var columns = eq.getColumns($targets),
                            i;
                    // reset min-height
                    $targets.css('min-height', '0');

                    if(columns > 1) {
                        for(i = 0; i < Math.ceil($targets.length / columns); i += 1) {
                            eq.applyHeights($targets.slice(columns * i, (columns * i) + columns));
                        }
                    }
                };

                $(window).resize(setHeights);
                setHeights();
            });

        },
        init: function () {
            return this.set($('.equal-heights'));
        }
    };

    // ====================================================
    // ACCORDION
    // ====================================================
    var accordion = {
        init: function () {
            // Only enable the accordion at higher resolution.
            // Need to detect the screen orientation - http://bit.ly/1iMiFWH
            if (Modernizr.mq('only screen and (min-width: 480px)')) {
                // quick open close test
                $('.accordion__content_container').hide();
                $('.accordion__tab').on('click', function (e) {
                    e.preventDefault();
                    $(this).closest('.accordion__item').toggleClass('accordion__closed');
                });
            }
            if (Modernizr.mq('only screen and (max-width: 480px)')) {
                $('#accordion ul').hide();
                $('.accordion__active-tab').on('click',
                    function() {
                        $(this).addClass('TEST');
                    });
                $('#accordion li h2').on('click',
                    function() {
                        var openMe = $(this).next();
                        var mySiblings = $(this).parent().siblings().find('ul');
                        if (openMe.is(':visible')) {
                            openMe.slideUp('normal');
                            $('li.accordion__active-tab').on('click', function() {
                                $(this).removeClass();
                            });
                        } else {
                            mySiblings.slideUp('normal');
                            openMe.slideDown('normal');
                            $('li').on('click', function() {
                                $(this).addClass('accordion__active-tab');
                                //$(documentBody).animate({scrollTop: $('.product-services__country-selection').offset().top}, 2000,'easeInOutCubic');
                            });
                        }
                    }
                );
                $(function() {
                   $('#accordion li').on('click', function() {
                      // remove classes from all
                      $('#accordion li').removeClass('accordion__active-tab');
                   });
                });

            }
            // Country selection
                $(function() {
                   $('#accordion .country-selector__region_list').children().find('.input__checkbox').addClass('js-country__confirm');
                   $('#accordion').find('.js-country__confirm').hide();
                   $('.country-selector__country_name').on('click', function(){
                        $(this).next('.js-country__confirm').fadeToggle();
                       }
                    );
                });
        }
    };

    var keyLinksCombo = {
        init: function() {
            $('.js-countryLinks').hide();

            $('#customCountryDropdown').change(function(){
                $(this).find("option").each(function(){
                    $('#' + this.value).hide();
                });
                $('#' + this.value).show();
            });
        }
    };

    var IE = {
        aperture: {
            // add divs for aperture borders to match branding
            set: function (el) {
                var html = '<span class="edge edge-left"><span class="edge-top"></span></span><span class="edge edge-right"><span class="edge-top"></span></span>';
                el.find('.aperture__content').append(html);
            },
            init: function () {
                var $aperture = $('.aperture'),
                    ap = this;
                $aperture.each(function () {
                    ap.set($(this));
                });
            }
        },
        // helpers for IE8
        init: function () {
            var isIE8 = $('html').hasClass('lt-ie9');

            if (isIE8) {
                this.aperture.init();
            }
        }
    };


    // ====================================================
    // CAROUSELS
    // ====================================================

    var initiateCarousels = {

        // add class to change carousel visibility
        // inactive slides given visibility:hidden style to hide links when tabbing
        animate:  {
            start: function ($carousel) {
                // stop animation when tabbing
                $carousel[0].tabIndex = 0;
                $carousel.on('focus', function () {
                    $carousel.pause();
                }).on('mouseover', function () {
                    $(this).addClass('carousel__hover');
                    $carousel.pause();
                }).on('mouseleave', function () {
                    $(this).removeClass('carousel__hover');
                });
            },
            before: function ($carousel) {
                $carousel.addClass('carousel__animating');
            },
            after: function ($carousel) {
                $carousel.removeClass('carousel__animating');
            }
        },

        init: function() {
            $('.carousel').flexslider({
                animation: "slide",
                pauseOnHover: true,
                animationLoop: true,
                slideshow: false,
                controlsContainer: '.carousel__controls',
                prevText: '',
                nextText: '',
                start: initiateCarousels.animate.start,
                before: initiateCarousels.animate.before,
                after: initiateCarousels.animate.after
            });

            $('.image-gallery__body').flexslider({
                animation: "slide"
            });

            $('.carousel-grid').flexslider({
                animation: "slide",
                slideshow: false
            });
        }
    };


    // ====================================================
    // ADDAPTIVE IMAGES
    // ====================================================

    var adaptiveImages = {

        init: function() {
            $(document).foundation('interchange', {
                named_queries : {
                    //small : 'only screen and (min-width: 480px)',
                    medium : 'only screen and (min-width: 480px)',
                    large : 'only screen and (min-width: 769px)'
                }
            });
        }
    };


    // ====================================================
    // JUMP TO NAVIGATION
    // ====================================================

    // var $jumpToNavToggle = $('.jump-to-nav-toggle'),
    //     $jumpToNavBackToTop = $('.jump-to-nav-bkToTop'),
    //     $jumpToItem = $('.jump-to-nav__item');

    var jumpToNav = {

        toggleDropDown: function(e) {
            // $('.jump-to-nav__items').slideToggle('fast');
            jumpToNav.$jumpTo.toggleClass('jump-to-nav__open');
            e.preventDefault();
        },

        backToTop: function(e) {
            $('html, body').animate({ scrollTop: jumpToNav.startPos }, 'slow');

            e.preventDefault();
        },

        scrollToSection: function(e) {

        //     var sectionName = $(this).data('magellan-arrival'),
        //         sectionContent = $('[data-magellan-destination=' + sectionName + ']'),
        //         scrollTarget = sectionContent.offset().top,
        //         jumpToLinksHeight = $('.jump-to-nav__links').height();

        //     $('html, body').animate({
        //         scrollTop: scrollTarget - jumpToLinksHeight
        //     }, 'slow');

        //     jumpToNav.updateLabel(this);
        //     jumpToNav.toggleDropDown();
            console.log(e.hash);
            console.log(jumpToNav.positions.indexOf(e.hash));
            console.log(jumpToNav.positions);
            e.preventDefault();
        },

        // updateLabel: function(elem) {
        //     var self = $(elem),
        //         linkText = self.find('a').text();

        //     $jumpToNavToggle.text(linkText);

        //     return;
        // },

        // check the positions of the content blocks
        checkJumpPositions: function () {
            var i = 0,
                l = jumpToNav.positions.length,
                $el;
            jumpToNav.startPos = jumpToNav.$jumpTo.offset().top;
            for (; i < l; i += 1) {
                $el = $(jumpToNav.positions[i].hid);
                if ($el.length) {
                    jumpToNav.positions[i].pos = $el.offset().top;
                }
            }
        },

        posPrevious: 0,
        scroll: function () {
            var pos = $(this).scrollTop(),
                $jumpToLinks = jumpToNav.$jumpToLinks,
                i = 0,
                l = jumpToNav.positions.length;
            // console.log(pos + '/' + jumpToNav.startPos);
            if (pos > jumpToNav.startPos) {
                $jumpToLinks.addClass('fixed');
            } else {
                $jumpToLinks.removeClass('fixed');
            }
            // recheck positions every 200 pixels up/down
            if (pos > (jumpToNav.posPrevious + 200) || pos < (jumpToNav.posPrevious - 200)) {
                jumpToNav.posPrevious = pos;
                jumpToNav.checkJumpPositions();
            }
            for (i = l - 1; i > -1; i -= 1) {
                if (i === 0) {
                    jumpToNav.$jumpToPosTitle.removeClass('visible');
                } else {
                    jumpToNav.$jumpToPosTitle.addClass('visible');
                }
                if (pos > jumpToNav.positions[i].pos) {
                    jumpToNav.$jumpToPosTitle[0].innerHTML = jumpToNav.positions[i].title;
                    return;
                }
            }
        },

        // Set the position of the jump menu
        setPosition: function () {
            var $jumpToLinks = jumpToNav.$jumpToLinks,
                $jumpTo = jumpToNav.$jumpTo,
                width;
                // jumpToNav.startPos = $jumpTo.offset().top;
                jumpToNav.checkJumpPositions();
                // jumpToNav.$end = $('[data-sticky="end"]').eq(0);
                // jumpToNav.endPos = jumpToNav.$end.offset().top;
                // if (jumpToNav.endPos === 0) {
                    // if the sticky end is hidden use the other footer
                    // jumpToNav.$end = $('.bottom-footer');
                // }
                // Set container width to retain styles when position fixed
                $jumpToLinks[0].style.width = '';
                width = $jumpToLinks[0].scrollWidth;
                $jumpToLinks[0].style.width = width + 'px';
                $jumpToLinks[0].style.left = $jumpTo.offset().left + 'px';
            // console.log(this)
        },

        init: function() {
            this.$jumpTo = $('.jump-to-nav');

            if (this.$jumpTo.length) {
                // store els in DOM
                this.$jumpToLinks = $('.jump-to-nav__links');
                this.$jumpToLink = $('.jump-to-nav__link');
                this.$jumpToNavBackToTop = $('.jump-to-nav-bkToTop');
                this.$jumpToNavToggle = $('.jump-to-nav-toggle');
                this.$jumpToPosTitle = $('.jump-to-nav-toggle__pos-title');
                this.positions = [];

                // get the titles and ids of the content block
                this.$jumpToLink.each(function () {
                    // console.log(this)
                    jumpToNav.positions.push({hid: this.hash, pos: null, title: this.innerHTML});
                });
                // console.log(jumpToNav.positions)
                // console.log(jumpToNav.positions[0].hid)
                // console.log($(jumpToNav.positions[0].hid).offset())
                // return
                // add events
                this.$jumpToNavToggle.on('click', this.toggleDropDown);
                this.$jumpToNavBackToTop.on('click', this.backToTop);
                this.$jumpToLink.on('click', this.scrollToSection);

                jumpToNav.setPosition();
                $(window).resize(jumpToNav.setPosition);
                $(window).on('scroll', jumpToNav.scroll);
            }
            // $(document).foundation('magellan');
            // $jumpToNavToggle.on('click', this.toggleDropDown);
            // $jumpToNavBackToTop.on('click', this.backToTop);
            // $jumpToItem.on('click', this.scrollToSection);
        }
    };



    // ====================================================
    // SHARE TOOLS
    // ====================================================

    var shareTools = {
        scroll: function () {
            var pos = $(this).scrollTop(),
                $share = shareTools.$share;
            // console.log(pos + '/' + shareTools.endPos)
            if (pos > shareTools.startPos) {
                $share.addClass('fixed');
            } else {
                $share.removeClass('fixed');
            }
            if (pos > shareTools.endPos - 420) {
                $share.removeClass('fixed').addClass('absolute');
                $share[0].style.top = (shareTools.endPos - 300) + 'px';
            } else {
                $share.removeClass('absolute');
                $share[0].style.top = '';
            }
            // recheck positions each time as image loading and accordion/tab opening modify height
            shareTools.startPos = shareTools.$shareContainer.offset().top - 100;
            shareTools.endPos = shareTools.$end.offset().top;
        },
        setPosition: function () {
            var $share = shareTools.$share,
                $shareContainer = shareTools.$shareContainer;
                shareTools.startPos = $shareContainer.offset().top - 100;
                shareTools.$end = $('[data-sticky="end"]').eq(0);
                shareTools.endPos = shareTools.$end.offset().top;
                if (shareTools.endPos === 0) {
                    // if the sticky end is hidden use the other footer
                    shareTools.$end = $('.bottom-footer');
                }
                $share[0].style.left = $shareContainer.offset().left + 'px';
            // console.log(this)
        },
        init: function () {
            var $share = $('.share-tools__body:eq(0)'),
                $shareContainer = $('.share-tools:eq(0)');
            this.$share = $share;
            this.$shareContainer = $shareContainer;
            if ($('html').hasClass('lt-ie9')) {
                return false;
            }
            if (this.$share.length) {
                if ( Modernizr.mq('only screen and (min-width: 480px)') ) {
                    shareTools.setPosition();
                    $(window).resize(shareTools.setPosition);
                    $(window).on('scroll', shareTools.scroll);
                } else {
                    $('.site-container > .row').last().after($shareContainer.html());
                    $shareContainer.hide();
                    // console.log('mobile')
                }
            }
        }
    };


    // ====================================================
    // STICKY HEADER -- MOBILE ONLY
    // ====================================================

    var $logoBanner =  $('[data-logo-banner]');

    var stickyHeader = {

        init: function() {
            this.checkOnLoad();
        },

        checkOnLoad: function() {

            if ( Modernizr.mq('only screen and (min-width: 769px)') ) {
                this.removeSticky();
            } else {
                this.addSticky();
            }

            this.mediaDetection();
        },

        mediaDetection: function() {

            jRes.addFunc({
                breakpoint: 'desktop',

                enter: function() {
                    stickyHeader.removeSticky();
                },

                exit: function() {
                    stickyHeader.addSticky();
                }
            });
        },

        addSticky: function() {

            var headerHeight = $logoBanner.height();

            $(document).bind('ready scroll', function() {
                var docScroll = $(document).scrollTop();

                if ( docScroll >= headerHeight ) {
                    $logoBanner.addClass('banner-sticky').css('width', $siteContainer.width());
                } else {
                    $logoBanner.removeClass('banner-sticky').removeAttr('style');
                }
            });

        },

        removeSticky: function() {

            $(document).unbind('ready scroll');

            $logoBanner.removeClass('banner-sticky').removeAttr('style');
        }

    };


    // ====================================================
    // TABS
    // ====================================================

    var $tabDesktopItem = $('[data-tabs-desktop-item]'),
        $tabDesktopContent = $('[data-tabs-content]');

    var tabs = {

        init: function() {
            $tabDesktopContent.not(':first').hide();
            $tabDesktopItem.on('click', this.toggleTabs);
        },

        toggleTabs: function(e) {

            var tabIndex = $(this).index();

            $tabDesktopContent.hide();
            $tabDesktopContent.eq(tabIndex).show();

            $tabDesktopItem.removeClass('active');
            $(this).addClass('active');

            e.preventDefault();
        }
    };


    // ====================================================
    // INITIALISATIONS
    // ====================================================

    megaMenu.init();

    offCanvasMenu.init();

    offCanvasMenuNestedLevels.init();

    headerSearchField.init();

    storyteller.init();

    storyTellerLazyLoad.init();

    storyTellerFilter.init();

    equalHeights.init();

    accordion.init();

    IE.init();

    initiateCarousels.init();

    adaptiveImages.init();

    jumpToNav.init();

    stickyHeader.init();

    shareTools.init();

    keyLinksCombo.init();

    tabs.init();

}());